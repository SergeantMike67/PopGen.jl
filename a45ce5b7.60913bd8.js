(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{181:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return l})),a.d(t,"metadata",(function(){return o})),a.d(t,"rightToc",(function(){return b})),a.d(t,"default",(function(){return d}));var n=a(2),i=a(9),r=(a(0),a(204)),l={id:"delimited",title:"Delimited format",sidebar_label:"Delimited format"},o={id:"io/delimited",isDocsHomePage:!1,title:"Delimited format",description:"Import a delimited file as PopData",source:"@site/docs/io/delimited.md",permalink:"/PopGen.jl/docs/io/delimited",editUrl:"https://github.com/pdimens/popgen.jl/edit/documentation/docs/io/delimited.md",lastUpdatedAt:1594327400,sidebar_label:"Delimited format",sidebar:"docs",previous:{title:"Writing data to file",permalink:"/PopGen.jl/docs/io/file_write"},next:{title:"Genepop format",permalink:"/PopGen.jl/docs/io/genepop"}},b=[{value:"Import a delimited file as <code>PopData</code>",id:"import-a-delimited-file-as-popdata",children:[{value:"Arguments",id:"arguments",children:[]},{value:"Keyword Arguments",id:"keyword-arguments",children:[]},{value:"Example",id:"example",children:[]},{value:"Format",id:"format",children:[]},{value:"Missing data",id:"missing-data",children:[]}]},{value:"Writing to a delimited file",id:"writing-to-a-delimited-file",children:[{value:"Keyword Arguments",id:"keyword-arguments-1",children:[]},{value:"Example",id:"example-1",children:[]}]},{value:"Acknowledgements",id:"acknowledgements",children:[]}],c={rightToc:b};function d(e){var t=e.components,a=Object(i.a)(e,["components"]);return Object(r.b)("wrapper",Object(n.a)({},c,a,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h2",{id:"import-a-delimited-file-as-popdata"},"Import a delimited file as ",Object(r.b)("inlineCode",{parentName:"h2"},"PopData")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-julia"}),"delimited(infile::String; kwargs...)\n")),Object(r.b)("h3",{id:"arguments"},"Arguments"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"infile::String")," : path to the input file, in quotes")),Object(r.b)("h3",{id:"keyword-arguments"},"Keyword Arguments"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"p"},"delim::String")," : delimiter characters. The default (",Object(r.b)("inlineCode",{parentName:"p"},'"auto"'),") uses auto-parsing of ",Object(r.b)("inlineCode",{parentName:"p"},"CSV.File"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"p"},"digits::Integer")," : the number of digits used to denote an allele (default: ",Object(r.b)("inlineCode",{parentName:"p"},"3"),")")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"p"},"diploid::Bool"),"  : whether samples are diploid for parsing optimizations (default: ",Object(r.b)("inlineCode",{parentName:"p"},"true"),")")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"p"},"silent::Bool")," : whether to print file information during import (default: ",Object(r.b)("inlineCode",{parentName:"p"},"true"),")"))),Object(r.b)("h3",{id:"example"},"Example"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{}),'lizardsCA = delimited("CA_lizards.csv", digits = 3);\n')),Object(r.b)("div",{className:"admonition admonition-caution alert alert--warning"},Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"}),Object(r.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"})))),"Windows users")),Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"make sure to change your backslashes ",Object(r.b)("inlineCode",{parentName:"p"},"\\")," to forward slashes ",Object(r.b)("inlineCode",{parentName:"p"},"/")," "))),Object(r.b)("h3",{id:"format"},"Format"),Object(r.b)("p",null,"First row is column names, and they occur in this order:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"name"),Object(r.b)("li",{parentName:"ol"},"population"),Object(r.b)("li",{parentName:"ol"},"longitude"),Object(r.b)("li",{parentName:"ol"},"latitude"),Object(r.b)("li",{parentName:"ol"},"locus_1_name"),Object(r.b)("li",{parentName:"ol"},"locus_2_name"),Object(r.b)("li",{parentName:"ol"},"etc...")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Formatting example:")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{}),"name,population,long,lat,Locus1,Locus2,Locus3   \\n\nsierra_01,mountain,11.11,-22.22,001001,-9,001001   \\n\nsierra_02,mountain,11.12,-22.21,001001,001001,001002   \\n\nsnbarb_01,coast,,,001001,001001,001002 \\n\nsnbarb_02,coast,11.14,-22.24,001001,001001,001001 \\n\nsnbarb_03,coast,11.15,,001002,001001,001001 \\n\n")),Object(r.b)("h3",{id:"missing-data"},"Missing data"),Object(r.b)("h4",{id:"genotypes"},"Genotypes"),Object(r.b)("p",null,"Missing genotypes can be formatted as all-zeros (ex.",Object(r.b)("inlineCode",{parentName:"p"},"000000"),") or negative-nine ",Object(r.b)("inlineCode",{parentName:"p"},"-9")),Object(r.b)("h4",{id:"location-data"},"Location data"),Object(r.b)("p",null,"If location data is missing for a sample (which is ok!), make sure the value is blank, otherwise there will be transcription errors! (example at line 3 in the example above)"),Object(r.b)("div",{className:"admonition admonition-info alert alert--info"},Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"alias")),Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"You can also use the command ",Object(r.b)("inlineCode",{parentName:"p"},"csv()")," synonymously with ",Object(r.b)("inlineCode",{parentName:"p"},"delimited()"),". "))),Object(r.b)("h2",{id:"writing-to-a-delimited-file"},"Writing to a delimited file"),Object(r.b)("p",null,"All file writing options can be performed using ",Object(r.b)("inlineCode",{parentName:"p"},"write_to()"),", which calls ",Object(r.b)("inlineCode",{parentName:"p"},"popdata2delimited")," when writing to a delimited file."),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-julia"}),'popdata2delimited(data::PopData; filename::String, delim::String = ",", digits::Integer = 3, format::String = "wide", miss::Int = 0)\n')),Object(r.b)("p",null,"Write PopData to a text-delimited file. "),Object(r.b)("h3",{id:"keyword-arguments-1"},"Keyword Arguments"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"filename"),": a ",Object(r.b)("inlineCode",{parentName:"li"},"String")," of the output filename"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"digits")," : an ",Object(r.b)("inlineCode",{parentName:"li"},"Integer")," indicating how many digits to format each allele as (e.g. ",Object(r.b)("inlineCode",{parentName:"li"},"(1, 2)")," => ",Object(r.b)("inlineCode",{parentName:"li"},"001002")," for ",Object(r.b)("inlineCode",{parentName:"li"},"digits = 3"),")"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"format")," : a ",Object(r.b)("inlineCode",{parentName:"li"},"String")," indicating whether to output in",Object(r.b)("inlineCode",{parentName:"li"},'"wide"')," or ",Object(r.b)("inlineCode",{parentName:"li"},'"long"')," (aka ",Object(r.b)("inlineCode",{parentName:"li"},'"tidy"'),") format ",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"wide")," : the standard format CSV for importing into PopGen.jl"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"long")," : the ",Object(r.b)("inlineCode",{parentName:"li"},"loci")," table with ",Object(r.b)("inlineCode",{parentName:"li"},"longitude")," and ",Object(r.b)("inlineCode",{parentName:"li"},"latitude")," columns added"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"delim")," : the ",Object(r.b)("inlineCode",{parentName:"li"},"String")," delimiter to use for writing the file. "),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"miss")," : an ",Object(r.b)("inlineCode",{parentName:"li"},"Integer")," for how you would like missing values written ",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"0")," : As a genotype represented as a number of zeroes equal to ",Object(r.b)("inlineCode",{parentName:"li"},"digits \xd7 ploidy")," like ",Object(r.b)("inlineCode",{parentName:"li"},"000000")," (default) "),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"-9")," : As a single value ",Object(r.b)("inlineCode",{parentName:"li"},"-9"))))),Object(r.b)("h3",{id:"example-1"},"Example"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-julia"}),'cats = nancycats();\nfewer_cats = omit(cats, names = samples(cats)[1:10]);\npopdata2delimited(fewer_cats, filename = "filtered_nancycats.gen", digits = 3, format = "wide", delim = " ")\n')),Object(r.b)("h2",{id:"acknowledgements"},"Acknowledgements"),Object(r.b)("p",null,"Thanks to the efforts of the ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/JuliaData/CSV.jl"}),"CSV.jl")," team, we are able leverage that package to do much of the heavy lifting within this parser. "))}d.isMDXComponent=!0},204:function(e,t,a){"use strict";a.d(t,"a",(function(){return m})),a.d(t,"b",(function(){return u}));var n=a(0),i=a.n(n);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function b(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var c=i.a.createContext({}),d=function(e){var t=i.a.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},m=function(e){var t=d(e.components);return i.a.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},s=i.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,r=e.originalType,l=e.parentName,c=b(e,["components","mdxType","originalType","parentName"]),m=d(a),s=n,u=m["".concat(l,".").concat(s)]||m[s]||p[s]||r;return a?i.a.createElement(u,o(o({ref:t},c),{},{components:a})):i.a.createElement(u,o({ref:t},c))}));function u(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=a.length,l=new Array(r);l[0]=s;var o={};for(var b in t)hasOwnProperty.call(t,b)&&(o[b]=t[b]);o.originalType=e,o.mdxType="string"==typeof e?e:n,l[1]=o;for(var c=2;c<r;c++)l[c]=a[c];return i.a.createElement.apply(null,l)}return i.a.createElement.apply(null,a)}s.displayName="MDXCreateElement"}}]);