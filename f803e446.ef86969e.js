(window.webpackJsonp=window.webpackJsonp||[]).push([[61],{161:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return l})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return p}));var a=n(2),i=n(6),r=(n(0),n(165)),o={},l={id:"getting_started/io/delimited",title:"delimited",description:"Delimited format",source:"@site/docs/getting_started/io/delimited.md",permalink:"/docs/getting_started/io/delimited",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/getting_started/io/delimited.md"},c=[{value:"Delimited format",id:"delimited-format",children:[]},{value:"Import a delimited file as <code>PopData</code>",id:"import-a-delimited-file-as-popdata",children:[{value:"Arguments",id:"arguments",children:[]},{value:"Keyword Arguments",id:"keyword-arguments",children:[]}]},{value:"File formatting:",id:"file-formatting",children:[{value:"Missing data",id:"missing-data",children:[]}]},{value:"Acknowledgements",id:"acknowledgements",children:[]}],b={rightToc:c};function p(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},b,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h2",{id:"delimited-format"},"Delimited format"),Object(r.b)("h2",{id:"import-a-delimited-file-as-popdata"},"Import a delimited file as ",Object(r.b)("inlineCode",{parentName:"h2"},"PopData")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-julia"}),'delimited(infile::String; delim::Union{Char,String,Regex} = "auto", digits::Int = 3, diploid::Bool = true, silent::Bool = false)\n\n# Example\njulia> a = delimited("/data/cali_poppy.csv", digits = 2)\n')),Object(r.b)("p",null,"::: warning Windows users\nmake sure to change your backslashes ",Object(r.b)("inlineCode",{parentName:"p"},"\\")," to forward slashes ",Object(r.b)("inlineCode",{parentName:"p"},"/"),"\n:::"),Object(r.b)("h3",{id:"arguments"},"Arguments"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"infile::String")," : path to the input file, in quotes")),Object(r.b)("h3",{id:"keyword-arguments"},"Keyword Arguments"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"p"},"delim::String")," : delimiter characters. The default (",Object(r.b)("inlineCode",{parentName:"p"},'"auto"'),") uses auto-parsing of ",Object(r.b)("inlineCode",{parentName:"p"},"CSV.File"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"p"},"digits::Integer")," : the number of digits used to denote an allele (default: ",Object(r.b)("inlineCode",{parentName:"p"},"3"),")")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"p"},"diploid::Bool"),"  : whether samples are diploid for parsing optimizations (default: ",Object(r.b)("inlineCode",{parentName:"p"},"true"),")")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"p"},"silent::Bool")," : whether to print file information during import (default: ",Object(r.b)("inlineCode",{parentName:"p"},"true"),")"))),Object(r.b)("h2",{id:"file-formatting"},"File formatting:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"The first row is column names (names don't matter)"),Object(r.b)("li",{parentName:"ul"},"The columns must be in this order:",Object(r.b)("ol",{parentName:"li"},Object(r.b)("li",{parentName:"ol"},"sample name"),Object(r.b)("li",{parentName:"ol"},"population name"),Object(r.b)("li",{parentName:"ol"},"longitude"),Object(r.b)("li",{parentName:"ol"},"latitude"),Object(r.b)("li",{parentName:"ol"},"locus_1 genotypes"),Object(r.b)("li",{parentName:"ol"},"locus_2 genotypes"),Object(r.b)("li",{parentName:"ol"},"etc...")))),Object(r.b)("h3",{id:"missing-data"},"Missing data"),Object(r.b)("h4",{id:"genotypes"},"Genotypes"),Object(r.b)("p",null,"Missing genotypes can be formatted as all-zeros ",Object(r.b)("inlineCode",{parentName:"p"},"000000"),", left empty, or negative-nine ",Object(r.b)("inlineCode",{parentName:"p"},"-9")),Object(r.b)("h4",{id:"location-data"},"Location data"),Object(r.b)("p",null,"If location data is missing for a sample (which is ok!), make sure the value ",Object(r.b)("strong",{parentName:"p"},"is\nblank"),", otherwise there will be transcription errors! (look at line 3 in the example below)"),Object(r.b)("p",null,":::: tabs card stretch\n::: tab formatting example"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"name,population,long,lat,Locus1,Locus2,Locus3\nsierra_01,mountain,11.11,-22.22,001001,-9,001001\nsierra_02,mountain,11.12,-22.21,001001,001001,001002\nsnbarb_01,coast,,,001001,000000,001002\nsnbarb_02,coast,11.14,-22.24,001001,001001,001001\nsnbarb_03,coast,11.15,,001002,001001,001001\n")),Object(r.b)("p",null,":::\n::::"),Object(r.b)("p",null,"::: tip\nYou can also use the command ",Object(r.b)("inlineCode",{parentName:"p"},"csv()")," synonymously with ",Object(r.b)("inlineCode",{parentName:"p"},"delimited()"),".\n:::"),Object(r.b)("h2",{id:"acknowledgements"},"Acknowledgements"),Object(r.b)("p",null,"Thanks to the efforts of the ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/JuliaData/CSV.jl"}),"CSV.jl")," team, we are able leverage that package to do much of the heavy lifting within this parser. "))}p.isMDXComponent=!0},165:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return u}));var a=n(0),i=n.n(a);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var b=i.a.createContext({}),p=function(e){var t=i.a.useContext(b),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=p(e.components);return i.a.createElement(b.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},s=i.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,o=e.parentName,b=c(e,["components","mdxType","originalType","parentName"]),d=p(n),s=a,u=d["".concat(o,".").concat(s)]||d[s]||m[s]||r;return n?i.a.createElement(u,l(l({ref:t},b),{},{components:n})):i.a.createElement(u,l({ref:t},b))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,o=new Array(r);o[0]=s;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var b=2;b<r;b++)o[b]=n[b];return i.a.createElement.apply(null,o)}return i.a.createElement.apply(null,n)}s.displayName="MDXCreateElement"}}]);